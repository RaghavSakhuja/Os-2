diff --git a/codes/A2/c/linux-5.19.8/arch/x86/entry/syscalls/syscall_64.tbl b/stuff/linux-5.19.8/arch/x86/entry/syscalls/syscall_64.tbl
index c84d126..8608a51 100644
--- a/codes/A2/c/linux-5.19.8/arch/x86/entry/syscalls/syscall_64.tbl
+++ b/stuff/linux-5.19.8/arch/x86/entry/syscalls/syscall_64.tbl
@@ -372,6 +372,7 @@
 448	common	process_mrelease	sys_process_mrelease
 449	common	futex_waitv		sys_futex_waitv
 450	common	set_mempolicy_home_node	sys_set_mempolicy_home_node
+451 	common	kernel_2d_memcpy	sys_kernel_2d_memcpy
 
 #
 # Due to a historical design error, certain syscalls are numbered differently
diff --git a/codes/A2/c/linux-5.19.8/Makefile b/stuff/linux-5.19.8/Makefile
index e361c62..4be8335 100644
--- a/codes/A2/c/linux-5.19.8/Makefile
+++ b/stuff/linux-5.19.8/Makefile
@@ -1100,7 +1100,7 @@ export MODORDER := $(extmod_prefix)modules.order
 export MODULES_NSDEPS := $(extmod_prefix)modules.nsdeps
 
 ifeq ($(KBUILD_EXTMOD),)
-core-y			+= kernel/ certs/ mm/ fs/ ipc/ security/ crypto/
+core-y			+= kernel/ certs/ mm/ fs/ ipc/ security/ crypto/ kernel_2d_memcpy_syscall/
 core-$(CONFIG_BLOCK)	+= block/
 core-$(CONFIG_IO_URING)	+= io_uring/
 
diff --git a/stuff/linux-5.19.8/kernel_2d_memcpy_syscall/Makefile b/stuff/linux-5.19.8/kernel_2d_memcpy_syscall/Makefile
new file mode 100644
index 0000000..0b8fb78
--- /dev/null
+++ b/stuff/linux-5.19.8/kernel_2d_memcpy_syscall/Makefile
@@ -0,0 +1 @@
+obj-y := kernel_2d_memcpy_syscall.o
diff --git a/stuff/linux-5.19.8/kernel_2d_memcpy_syscall/kernel_2d_memcpy_syscall b/stuff/linux-5.19.8/kernel_2d_memcpy_syscall/kernel_2d_memcpy_syscall
new file mode 100644
index 0000000..067a643
--- /dev/null
+++ b/stuff/linux-5.19.8/kernel_2d_memcpy_syscall/kernel_2d_memcpy_syscall
@@ -0,0 +1,17 @@
+#include <linux/kernel.h>
+#include <linux/syscalls.h>
+
+SYSCALL_DEFINE4(kernel_2d_memcpy, float*, src, float*, dest, int, rows,int ,cols)
+{
+    float buffer[rows][cols]; 
+    
+    if (__copy_from_user(buffer, src, sizeof(float)* (rows*cols)))
+       return -EFAULT;
+
+    if (__copy_to_user(dest, buffer, sizeof(float)*(rows*cols)))
+       return -EFAULT;
+
+    return 0;
+}
+
+

